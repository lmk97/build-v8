target_os = "win"
target_cpu = "x64"
v8_target_cpu = "x64"

clang_use_chrome_plugins = false
is_component_build = false
linux_use_bundled_binutils = false
use_dummy_lastchange = true
use_sysroot = false
simple_template_names = false

# Minimize size of debuginfo in distributed static library.
line_tables_only = true
no_inline_line_tables = true
symbol_level = 1
use_debug_fission = false

v8_enable_sandbox = false
v8_enable_javascript_promise_hooks = true
v8_promise_internal_field_count = 1
v8_use_external_startup_data = false
v8_use_snapshot = false

v8_enable_pointer_compression = false

v8_imminent_deprecation_warnings = false

# This flag speeds up the performance of fork/execve on Linux systems for
# embedders which use it (like Node.js). It works by marking the pages that
# V8 allocates as MADV_DONTFORK. Without MADV_DONTFORK, the Linux kernel
# spends a long time manipulating page mappings on fork and exec which the
# child process doesn't generally need to access.
v8_enable_private_mapping_fork_optimization = true

# We prefer embedders to bring their own compression
v8_use_zlib = false
v8_enable_snapshot_compression = false

# Disable handle zapping for performance
v8_enable_handle_zapping = false

# Ensure allocation of typed arrays and arraybuffers always goes through
# the embedder's ArrayBufferAllocator, otherwise small buffers get moved
# around by the garbage collector but embedders normally want them to have
# fixed addresses.
v8_typed_array_max_size_in_heap = 0

# Historically these always had 2 slots. Keep for compat.
v8_array_buffer_internal_field_count = 2
v8_array_buffer_view_internal_field_count = 2

# Enabling the shared read-only heap comes with a restriction that all
# isolates running at the same time must be created from the same snapshot.
v8_enable_shared_ro_heap = false

# V8 11.6 hardcoded an assumption in `mksnapshot` that shared RO heap
# is enabled. In our case it's disabled so without this flag we can't
# compile.
v8_enable_verify_heap = false

# Enable V8 object print for debugging.
# v8_enable_object_print = true

# V8 12.3 added google/fuzztest as a third party dependency.
# This flag disables it.
v8_enable_fuzztest = false

# Disable v8::HandleScope LIFO checks.
v8_enable_v8_checks = false

use_relative_vtables_abi = false

v8_depend_on_icu_data_file = false
icu_copy_icudata_to_root_build_dir = false

is_debug = false
is_clang = true
v8_monolithic = true
v8_static_library = true

is_official_build = false
dcheck_always_on = false
is_cfi = false
is_asan = false
use_custom_libcxx = false
use_custom_libcxx_for_host = false
treat_warnings_as_errors = false
v8_enable_i18n_support = true
proprietary_codecs = false
toolkit_views = false
use_aura = false
use_dbus = false
use_gio = false
use_glib = false
use_ozone = false
use_udev = false
v8_deprecation_warnings = false
v8_enable_gdbjit = false
v8_scriptormodule_legacy_lifetime = true
v8_enable_builtins_optimization = true
v8_runtime_call_stats = false
